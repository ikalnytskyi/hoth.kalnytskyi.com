name: CI

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

jobs:
  lint:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install pre-commit
        run: |
          python -m pip install --upgrade pip
          python -m pip install --upgrade pre-commit

      - name: Run pre-commit
        run: |
          python -m pre_commit run --all-files --show-diff-on-failure

  site:
    runs-on: ubuntu-24.04

    services:
      webdav:
        image: bytemark/webdav
        env:
          USERNAME: test
          PASSWORD: test
        ports:
          - 8000:80

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install ansible
        run: |
          python -m pip install --upgrade pip
          python -m pip install --upgrade ansible

      - name: Install playbook dependencies
        run: |
          sudo apt install skopeo umoci rsync

      - name: Create block storage device (volume)
        run: |
          VOLUME_DEVICE="$(losetup -f)"
          VOLUME_IMAGE="${{ runner.temp }}/diskimage"
          dd if=/dev/zero of=$VOLUME_IMAGE bs=1M count=1024
          sudo losetup $VOLUME_DEVICE $VOLUME_IMAGE
          sudo mkfs.ext4 $VOLUME_DEVICE
          echo "uri=$VOLUME_DEVICE" >> $GITHUB_OUTPUT
        id: volume-device

      - name: Create kopia repository
        run: |
          docker run --rm --interactive --network=host --entrypoint=/usr/bin/bash kopia/kopia - <<EOF \
            | grep "kopia repository connect from-config" \
            | awk '{print "reconnect-token="$NF}' \
            >> $GITHUB_OUTPUT
          export KOPIA_PASSWORD="1234"
          export KOPIA_WEBDAV_USERNAME="test"
          export KOPIA_WEBDAV_PASSWORD="test"

          kopia repository create webdav --url=http://127.0.0.1:8000
          kopia repository status --reconnect-token --reconnect-token-with-password
          EOF
        id: kopia-repository

      - name: Add server names to /etc/hosts
        run: |
          echo "127.0.0.1 hoth.kalnytskyi.local" | sudo tee -a /etc/hosts
          echo "127.0.0.1 vault.kalnytskyi.local" | sudo tee -a /etc/hosts

      - name: Run the playbook
        run: |
          ansible-galaxy collection install -r requirements.yml
          ansible-playbook \
            -vvv \
            --inventory "hoth," \
            --connection local \
            --extra-vars storage_device='${{ steps.volume-device.outputs.uri }}' \
            --extra-vars kopia_repository_reconnect_token='${{ steps.kopia-repository.outputs.reconnect-token }}' \
            --extra-vars vaultwarden_domain='vault.kalnytskyi.local' \
            --extra-vars vaultwarden_smtp_password='sw0rdf1sh' \
            --extra-vars vaultwarden_yubico_client_id='' \
            --extra-vars vaultwarden_yubico_secret_key='' \
            --extra-vars wireguard_private_key='qOanPI1Z6XlEcR+ebyPB7z5qr6F2S0FZP7iWe+4AqVA=' \
            site.yml
